name: Build app

on:
  push: 
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      stamp:
        description: Enter "yes" to stamp this build after notarization.

jobs:
  build:
    runs-on: macos-latest
    steps:
    - name: Will upload artifact
      if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
      run: echo "should_upload_app=yes" >> "$GITHUB_ENV"
    - name: Pip install
      run: pip install pip install biplist dmgbuild && which dmgbuild
    - name: Pip verify
      run: dmgbuild --help
    - uses: actions/checkout@v2
    - name: Build
      # To add the CERTIFICATES_P12 to GH secrets, do:
      # base64 -w 0 cert.p12
      run: |
        ./buildscripts/add-osx-cert.sh
        xcodebuild -scheme whatdid-release build archive -archivePath build/whatdid
      env:
        CERTIFICATES_P12: ${{ secrets.CERTIFICATES_P12 }}
        CERTIFICATES_P12_PASSWORD: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
    - name: Notarize and prepare artifacts for upload
      if: env.should_upload_app
      run: |
        set -e -o pipefail
        xcodebuild -exportArchive -archivePath build/whatdid.xcarchive -exportPath build -exportOptionsPlist buildscripts/archive-export.plist
        cd build
        ditto -c -k --keepParent whatdid.app whatdid.zip
        mkdir logs
        mv DistributionSummary.plist Packaging.log logs/
        xcrun altool --notarize-app --primary-bundle-id "com.yuvalshavit.whatdid.gh.${{ github.run_number }}" -u "${{ secrets.APPLE_ID }}" -p "${{ secrets.APPLE_PW }}" -f whatdid.zip --output-format json | tee notarization-results.json
        notarization_request=$(jq <notarization-results.json -r '."notarization-upload".RequestUUID')
        echo "notarization_request=${notarization_request}" >> "$GITHUB_ENV"
    - name: Wait for notarization and stamp app
      if: env.should_upload_app && github.event.inputs.stamp == 'yes'
      run: |
        set -e -o pipefail
        cd build
        timeout_seconds=3600 # in practice, it should be just a few minutes; but Apple says it's less than an hour
        echo "Will wait up to $timeout_seconds for notarization request $notarization_request."
        timeout_at=$(( $(date +%s) + $timeout_seconds ))
        while true ; do
          if xcrun altool --notarization-history 0 -u "${{ secrets.APPLE_ID }}" -p "${{ secrets.APPLE_PW }}" | grep -qE "${notarization_request}\s+success" ; then
            echo "Success. Stapling and re-zipping"
            xcrun stapler staple whatdid.app
            break
          elif [[ $(date +%s) -gt $timeout_at ]]; then
            echo "Timed out!"
            exit 1
          else
            echo "Notarization not yet complete. Waiting 60 seconds."
            sleep 60
          fi
        done
      env:
        notarization_request: ${{ env.notarization_request }}
    - name: Create DMG
      run: |
        pwd
        dmgbuild -s buildscripts/dmgbuild_settings.py -D app=build/whatdid.app "Whatdid" Whatdid.dmg
    - name: Upload app
      uses: actions/upload-artifact@v2
      if: env.should_upload_app
      with:
        name: Whatdid.dmg
        path: build/Whatdid.dmg
    - name: Upload logs
      uses: actions/upload-artifact@v2
      if: env.should_upload_app
      with:
        name: packaging-logs
        path: build/logs
