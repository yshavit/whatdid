name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  release-build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build release
      run: xcodebuild clean build -scheme whatdid-release
  ui-tests:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dismiss upgrade dialog if present
      run: |
            update_name=$(softwareupdate -l | grep "Title: " | awk -F[:,] '{print $2}' | awk '{$1=$1};1')
            if [ ! -z "$update_name" ]; then
                sudo softwareupdate --ignore "$update_name"
            fi
    - name: Get current time
      id: start_time
      run: 'echo "::set-output name=unixtime::@$(date +%s)"'
    - name: Build and run UI tests
      run: xcodebuild clean test -scheme whatdid-ui-test -resultBundlePath ${{ runner.temp }}/test-results/bundle
    - name: Gather logs
      if: ${{ failure() }}
      run: |
            mkdir "${{ runner.temp }}/export"

            mkdir "${{ runner.temp }}/log-gather"
            pushd "${{ runner.temp }}/log-gather"
            sudo log collect --start ${{ steps.start_time.outputs.unixtime }} --output full.logarchive
            log show --predicate "process = 'whatdid'" full.logarchive > whatdid-logs.txt
            zip whatdid-logs.zip whatdid-logs.txt
            mv whatdid-logs.zip "${{ runner.temp }}/export/"
            popd

            mv "$(readlink ${{ runner.temp }}/test-results/bundle)" "${{ runner.temp }}/export/failure-logs.xcresult"
    - name: Upload test artifacts
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: run-${{ github.run_number }}-logs
        path: ${{ runner.temp }}/export
  unit-tests:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build and run unit tests
      run: xcodebuild clean test -scheme whatdid-debug
